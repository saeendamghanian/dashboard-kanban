{"version":3,"sources":["components/Welcome.js","components/Error404.js","components/ApplicantLabel.js","components/CallIcon.js","components/FaceIcon.js","components/ElapsedDate.js","components/IconContainer.js","components/Card.js","components/Column.js","services/cyf-api.js","containers/ColumnsContainer.js","containers/KanbanBoard.js","components/Navbar.js","components/ApplicantDetailPageTitle.js","components/IndividualWorkContainer/ProgressBar.js","components/IndividualWorkContainer/BasicApplicantDetails/firstName.js","components/IndividualWorkContainer/BasicApplicantDetails/lastName.js","components/IndividualWorkContainer/BasicApplicantDetails/gender.js","components/IndividualWorkContainer/BasicApplicantDetails/dateOfBirth.js","components/IndividualWorkContainer/BasicApplicantDetails/phoneNumber.js","components/IndividualWorkContainer/BasicApplicantDetails/AvailableOnWhatsApp.js","components/IndividualWorkContainer/BasicApplicantDetails/country.js","components/IndividualWorkContainer/BasicApplicantDetails/city.js","components/IndividualWorkContainer/BasicApplicantDetails/cyfCity.js","components/IndividualWorkContainer/BasicApplicantDetails/IsAsylumSeekerOrRefugee.js","components/IndividualWorkContainer/BasicApplicantDetails/disadvantagedBackground.js","components/IndividualWorkContainer/BasicApplicantDetails/disadvantagedBackgroundDescribe.js","components/IndividualWorkContainer/BasicApplicantDetails/currentlyEmployed.js","components/IndividualWorkContainer/BasicApplicantDetails/studying.js","components/IndividualWorkContainer/BasicApplicantDetails/experience.js","components/IndividualWorkContainer/BasicApplicantDetails/itAccess.js","components/IndividualWorkContainer/BasicApplicantDetails/hearAbout.js","components/IndividualWorkContainer/BasicApplicantDetails/index.js","components/IndividualWorkContainer/ApplicationProcess.js","components/IndividualWorkContainer/index.js","containers/ApplicantDetailPageContainer.js","containers/ListView.js","App.js","serviceWorker.js","index.js"],"names":["Welcome","style","textAlign","Error404","ApplicantLabel","student","fullName","userId","linkLocation","className","to","CallIcon","CallIconColor","colors","successful","green","unsuccessful","red","notYet","grey","undefined","phoneCalls","color","FaceIcon","props","faceIconVisibility","isAsylumSeekerOrRefugee","ElapsedDate","lastCall","updatedAt","duration","moment","diff","humanize","IconContainer","Card","Column","allowedStudents","step","card","map","key","_id","reverse","header","length","simulateNetworkLag","Promise","resolve","setTimeout","Math","random","ColumnsContainer","state","stepsList","studentsList","currentStep","currentStepNum","steps","filter","status","number","sort","getData","a","async","all","mock_steps","mock_students","stepsData","studentsData","console","log","this","setState","columns","React","Component","KanbanBoard","NavBar","ApplicantDetailPageTitle","params","id","ProgressBar","Stepper","activeStep","alternativeLabel","Step","StepLabel","firstName","onChange","isEditMode","editModeClass","htmlFor","type","name","placeholder","value","required","disabled","lastName","gender","htmlor","shouldValidate","maxDate","format","maxDateError","tel","formatPhoneNumberIntl","e","availableOnWhatsApp","country","countryList","countryObj","code","city","cityId","cities","disadvantagedBackground","disadvantagedBackgroundDescribe","currentlyEmployed","studying","experience","itAccess","hearAbout","dateOfBirthOnChange","telOnChange","AvailableOnWhatsApp","IsAsylumSeekerOrRefugee","TabContent","args","description","ApplicationProcess","useState","setValue","tabs","Tab","label","wrapped","tabContents","index","AppBar","position","Tabs","event","newValue","indicatorColor","textColor","variant","scrollButtons","IndividualWorkContainer","ApplicantDetailPageContainer","match","ListView","App","path","component","exact","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.58303197.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Welcome = () => {\n  return (\n    <div>\n      <h1 style={{ textAlign: \"center\" }}>Welcome to the KANBAN project</h1>\n    </div>\n  );\n};\n\nexport default Welcome;\n","import React from \"react\";\n\nconst Error404 = () => {\n  return <h1>404 error</h1>;\n};\n\nexport default Error404;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst ApplicantLabel = ({ student }) => {\n  const { userId, fullName } = student;\n  const linkLocation = `/applicant/${fullName}`;\n\n  return (\n    <div className=\"applicant-name\">\n      <Link to={linkLocation}>{fullName}</Link>\n    </div>\n  );\n};\n\nexport default ApplicantLabel;\n","import React from \"react\";\nimport CallRoundedIcon from \"@material-ui/icons/CallRounded\";\nimport { green, yellow, red, grey } from \"@material-ui/core/colors\";\n\nconst CallIcon = ({ student }) => {\n  // The color pool for the different modes of call icon.\n  let colors = {\n    successful: green[500],\n    unsuccessful: red[500],\n    notYet: grey[500]\n  };\n  let CallIconColor;\n  let phoneCallStatus =\n    student.phoneCalls === undefined ? \"not yet\" : student.phoneCalls[0];\n\n  switch (phoneCallStatus) {\n    case \"successful\":\n      CallIconColor = colors.successful;\n      break;\n\n    case \"unsuccessful\":\n      CallIconColor = colors.unsuccessful;\n      break;\n\n    case \"not yet\":\n      CallIconColor = colors.notYet;\n      break;\n\n    // Need to handle errors here.\n    default:\n  }\n\n  return <CallRoundedIcon style={{ color: CallIconColor }} />;\n};\n\nexport default CallIcon;\n","import React from \"react\";\nimport MoodRoundedIcon from \"@material-ui/icons/MoodRounded\";\n\nconst FaceIcon = props => {\n  let faceIconVisibility;\n  if (!props.student.isAsylumSeekerOrRefugee) {\n    faceIconVisibility = \"hidden\";\n  }\n\n  return <MoodRoundedIcon className={`face-icon ${faceIconVisibility}`} />;\n};\n\nexport default FaceIcon;\n","import React from \"react\";\nimport moment from \"moment\";\n\nconst ElapsedDate = ({ student }) => {\n  let lastCall = student.updatedAt;\n  let duration = moment().diff(lastCall, \"days\");\n\n  return <time>{moment.duration(duration * -1, \"days\").humanize(true)}</time>;\n};\n\nexport default ElapsedDate;\n","import React from \"react\";\nimport CallIcon from \"./CallIcon\";\nimport FaceIcon from \"./FaceIcon\";\nimport ElapsedDate from \"./ElapsedDate\";\n\nconst IconContainer = props => {\n  return (\n    <div className=\"icon-container\">\n      <FaceIcon {...props} />\n      <CallIcon {...props} />\n      <ElapsedDate {...props} />\n    </div>\n  );\n};\n\nexport default IconContainer;\n","import React from \"react\";\nimport ApplicantLabel from \"./ApplicantLabel\";\nimport IconContainer from \"./IconContainer\";\n\nconst Card = ({ student }) => {\n  return (\n    <div className=\"card\">\n      <ApplicantLabel student={student} />\n      <IconContainer student={student} />\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"./Card\";\n\nconst Column = ({ allowedStudents, step }) => {\n  const card = allowedStudents\n    .map(student => <Card key={student._id} student={student} />)\n    .reverse();\n\n  return (\n    <div className=\"column\">\n      <h4>{`${step.header} (${allowedStudents.length})`}</h4>\n      <div>{card}</div>\n    </div>\n  );\n};\n\nexport default Column;\n","import mock_students from \"./mocks/students.json\";\nimport mock_steps from \"./mocks/steps.json\";\n\n// to simulate network connection lag, we need a timeout\nconst simulateNetworkLag = () =>\n  new Promise(resolve => setTimeout(resolve, Math.random() * 600 + 100));\n\n/**\n * Get the list of all students\n *\n * @returns {Promise} Array of Students\n */\nexport const getStudents = async () => {\n  await simulateNetworkLag();\n  return mock_students;\n};\n\n/**\n * Get a single student by its ID\n *\n * @param {string} studentId\n *\n * @returns {object} Student\n */\nexport const getStudentById = async studentId => {\n  await simulateNetworkLag();\n  return mock_students.find(({ _id }) => _id === studentId);\n};\n\n/**\n * Get the list of all steps\n *\n * @returns {Promise} Array of Steps\n */\nexport const getSteps = async () => {\n  await simulateNetworkLag();\n  return mock_steps;\n};\n","import React from \"react\";\nimport Column from \"../components/Column\";\nimport { getSteps, getStudents } from \"../services/cyf-api\";\n\nexport default class ColumnsContainer extends React.Component {\n  state = {\n    stepsList: [],\n    studentsList: []\n  };\n\n  async componentDidMount() {\n    const getData = async () => {\n      try {\n        const [stepsData, studentsData] = await Promise.all([\n          getSteps(),\n          getStudents()\n        ]);\n\n        // problem: unconsistent returned value\n        console.log(stepsData);\n        console.log(studentsData);\n\n        return {\n          stepsData,\n          studentsData\n        };\n      } catch (error) {\n        console.log(\"Error happens\");\n        // two options:\n        // 1. throw the error again\n        // 2. return empty object\n\n        return {};\n      }\n    };\n\n    const { stepsData, studentsData } = await getData();\n    this.setState({\n      stepsList: stepsData,\n      studentsList: studentsData\n    });\n  }\n\n  currentStep = student => {\n    let currentStepNum = 0;\n    // Find the approved steps.\n    const approvedSteps = student.steps.filter(\n      step => step.status === \"Approved\"\n    );\n    // Make an array of approved steps.\n    const steps = approvedSteps.map(step => step.number).sort();\n    // Select the right step.\n    if (steps.length !== 0) {\n      currentStepNum = steps[steps.length - 1];\n    }\n\n    return currentStepNum;\n  };\n\n  render() {\n    // Create a column for each step.\n    const columns = this.state.stepsList.map(step => {\n      // Find the students which is allowed to be added to column.\n      const allowedStudents = this.state.studentsList.filter(\n        student => this.currentStep(student) === step.number\n      );\n\n      return (\n        <Column\n          key={step.number}\n          step={step}\n          allowedStudents={allowedStudents}\n        />\n      );\n    });\n\n    return <div className=\"column-container\">{columns}</div>;\n  }\n}\n","import React from \"react\";\nimport ColumnsContainer from \"./ColumnsContainer\";\n\nconst KanbanBoard = () => {\n  return (\n    <div>\n      <ColumnsContainer />\n    </div>\n  );\n};\n\nexport default KanbanBoard;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass NavBar extends Component {\n  render() {\n    const Separator = () => <span> &middot; </span>;\n    return (\n      <div>\n        <ul className=\"navbar\">\n          <li className=\"navbar-item\">\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li className=\"navbar-item\">\n            <Link to=\"/kanban\">Kanban View</Link>\n          </li>\n          <li className=\"navbar-item\">\n            <Link to=\"/list\">List View</Link>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\nexport default NavBar;\n","import React from \"react\";\n\nconst ApplicantDetailPageTitle = props => {\n  return (\n    <h1 style={{ textAlign: \"center\" }}>I'm the applicant {props.params.id}</h1>\n  );\n};\n\nexport default ApplicantDetailPageTitle;\n","import React from \"react\";\nimport { Stepper, Step, StepLabel } from \"@material-ui/core\";\n\nconst ProgressBar = ({ steps, currentStep }) => {\n  return (\n    <div>\n      <Stepper activeStep={currentStep} alternativeLabel>\n        {steps.map(step => (\n          <Step key={step}>\n            <StepLabel>{step.header}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n    </div>\n  );\n};\n\nexport default ProgressBar;\n","import React from \"react\";\n\nexport default ({ firstName, onChange, isEditMode, editModeClass }) => {\n  return (\n    <div className=\"form-group application-form-section-one-items\">\n      <label htmlFor=\"firstName\" className=\"lead\">\n        First Name\n      </label>\n      <input\n        type=\"text\"\n        name=\"firstName\"\n        id=\"firstName\"\n        className={`form-control ${editModeClass}`}\n        placeholder=\"Your first name...\"\n        value={firstName}\n        required\n        onChange={onChange}\n        disabled={!isEditMode}\n      />\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default ({ onChange, lastName, isEditMode, editModeClass }) => {\n  return (\n    <div className=\"form-group application-form-section-one-items\">\n      <label htmlFor=\"lastName\" className=\"lead\">\n        Last Name\n      </label>\n      <input\n        type=\"text\"\n        name=\"lastName\"\n        id=\"lastName\"\n        className=\"form-control\"\n        placeholder=\"Your last name...\"\n        value={lastName}\n        required\n        onChange={onChange}\n        disabled={!isEditMode}\n      />\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default ({ onChange, gender, isEditMode, editModeClass }) => {\n  return (\n    <div className=\"form-group application-form-section-one-items\">\n      <label htmlor=\"gender\" className=\"lead\">\n        Gender\n      </label>\n      <select\n        className={`form-control form-control-lg ${editModeClass}`}\n        name=\"gender\"\n        id=\"gender\"\n        value={gender}\n        onChange={onChange}\n        required\n        disabled={!isEditMode}\n      >\n        <option value=\"\" disabled>\n          Select here\n        </option>\n        <option value=\"Male\">Male</option>\n        <option value=\"Female\">Female</option>\n        <option value=\"Other\">Other</option>\n        <option value=\"PreferNotToSay\">Prefer not to say</option>\n      </select>\n    </div>\n  );\n};\n","import React from \"react\";\nimport DateInput from \"date-input\";\nimport moment from \"moment\";\n\nexport default ({ onChange, isEditMode, editModeClass }) => {\n  return (\n    <div className=\"form-group application-form-section-one-items date-of-birth-input\">\n      <label htmlFor=\"dateOfBirth\" className=\"w-50 lead\">\n        Date Of Birth\n      </label>\n      <DateInput\n        shouldValidate\n        onChange={value => onChange(value)}\n        maxDate={moment().format(\"YYYY-MM-DD\")}\n        maxDateError=\"Your birthday should be a past date\"\n        disabled={!isEditMode}\n      />\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"react-phone-number-input/style.css\";\nimport PhoneInput, { formatPhoneNumberIntl } from \"react-phone-number-input\";\n\nexport default ({ onChange, tel, isEditMode, editModeClass }) => {\n  return (\n    <div className=\"form-group application-form-section-one-items\">\n      <label>\n        <span>Phone number *</span>\n        <span className=\"tel-preview\">{formatPhoneNumberIntl(tel)}</span>\n      </label>\n      <PhoneInput\n        placeholder=\"Enter phone number\"\n        value={tel}\n        onChange={e => onChange(e)}\n        className=\"form-control\"\n        disabled={!isEditMode}\n      />\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default ({\n  onChange,\n  availableOnWhatsApp,\n  isEditMode,\n  editModeClass\n}) => {\n  return (\n    <div className=\"form-group application-form-section-one-items\">\n      <label htmlor=\"availableOnWhatsApp\" className=\"lead\">\n        Available on WhatsApp?\n      </label>\n      <select\n        className=\"form-control\"\n        id=\"availableOnWhatsApp\"\n        name=\"availableOnWhatsApp\"\n        value={availableOnWhatsApp}\n        required\n        onChange={onChange}\n        placeholder=\"07894561230\"\n        disabled={!isEditMode}\n      >\n        <option value=\"\" disabled>\n          Select here\n        </option>\n        <option value>Yes</option>\n        <option value={false}>No</option>\n      </select>\n    </div>\n  );\n};\n","import React from \"react\";\nimport countryList from \"./countryList\";\n\nexport default ({ onChange, country, isEditMode, editModeClass }) => {\n  return (\n    <div className=\"form-group application-form-section-one-items\">\n      <label htmlFor=\"country\" className=\"lead\">\n        Which country are you from?\n      </label>\n      <select\n        placeholder=\"Select your country\"\n        onChange={onChange}\n        id=\"country\"\n        name=\"country\"\n        className=\"form-control\"\n        value={country}\n        required\n        disabled={!isEditMode}\n      >\n        <option value=\"\" disabled>\n          Select here\n        </option>\n        {countryList.map(countryObj => (\n          <option key={countryObj.code} value={countryObj.name}>\n            {countryObj.name}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default ({ onChange, city, isEditMode, editModeClass }) => {\n  return (\n    <div className=\"form-group application-form-section-one-items\">\n      <label htmlFor=\"city\" className=\"lead\">\n        Which city do you currently live in?\n      </label>\n      <input\n        type=\"text\"\n        id=\"city\"\n        name=\"city\"\n        className=\"form-control\"\n        placeholder=\"E.g., London or Manchester\"\n        value={city}\n        required\n        onChange={onChange}\n        disabled={!isEditMode}\n      />\n    </div>\n  );\n};\n","import React from \"react\";\n\nfunction chooseCity(cities) {\n  const filteredCities = cities.filter(\n    city =>\n      city.visibleIn && city.visibleIn.includes(\"APPLICATION_PROCESS_FORM\")\n  );\n  return filteredCities.map(city => {\n    return (\n      <option key={city._id} value={city._id}>\n        {city.name}\n      </option>\n    );\n  });\n}\n\nexport default ({ onChange, cityId, cities, isEditMode, editModeClass }) => {\n  return (\n    <div className=\"form-group application-form-section-one-items\">\n      <label htmlFor=\"cityId\" className=\"lead\">\n        Which Code Your Future coding community is close to you?\n      </label>\n      <select\n        className=\"form-control\"\n        id=\"cityId\"\n        name=\"cityId\"\n        placeholder=\"Chose\"\n        value={cityId}\n        // required\n        onChange={onChange}\n        disabled={!isEditMode}\n      >\n        <option value=\"\" disabled>\n          Select here\n        </option>\n        <option value=\"Rome\">Rome</option>\n        <option value=\"London\">London</option>\n        {/* {chooseCity(cities.cities)} */}\n      </select>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default ({\n  onChange,\n  isAsylumSeekerOrRefugee,\n  isEditMode,\n  editModeClass\n}) => {\n  return (\n    <div className=\"form-group application-form-section-one-items\">\n      <label htmlor=\"isAsylumSeekerOrRefugee\" className=\"lead\">\n        Are you an asylum seeker or a refugee?\n      </label>\n      <select\n        className=\"form-control\"\n        id=\"isAsylumSeekerOrRefugee\"\n        name=\"isAsylumSeekerOrRefugee\"\n        value={isAsylumSeekerOrRefugee}\n        required\n        onChange={onChange}\n        disabled={!isEditMode}\n      >\n        <option value=\"\" disabled>\n          Select here\n        </option>\n        <option value>Yes</option>\n        <option value={false}>No</option>\n      </select>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default ({\n  onChange,\n  disadvantagedBackground,\n  isEditMode,\n  editModeClass\n}) => {\n  return (\n    <div className=\"form-group \">\n      <label htmlor=\"disadvantagedBackground\" className=\"lead\">\n        Do you consider yourself to be from a disadvantaged background? *\n      </label>\n      <select\n        className=\"form-control\"\n        id=\"disadvantagedBackground\"\n        name=\"disadvantagedBackground\"\n        value={disadvantagedBackground}\n        required\n        onChange={onChange}\n        disabled={!isEditMode}\n      >\n        <option value=\"\" disabled>\n          Select here\n        </option>\n        <option value>Yes</option>\n        <option value={false}>No</option>\n      </select>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default ({\n  onChange,\n  disadvantagedBackgroundDescribe,\n  isEditMode,\n  editModeClass\n}) => {\n  return (\n    <div className=\"form-group \">\n      <label htmlor=\"disadvantagedBackground\" className=\"lead\">\n        Please describe. *\n      </label>\n      <textarea\n        type=\"text\"\n        name=\"disadvantagedBackgroundDescribe\"\n        className=\"form-control\"\n        id=\"disadvantagedBackgroundDescribe\"\n        placeholder=\"Describe... \"\n        value={disadvantagedBackgroundDescribe}\n        onChange={onChange}\n        required\n        disabled={!isEditMode}\n      />\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default ({ onChange, currentlyEmployed, isEditMode, editModeClass }) => {\n  return (\n    <div className=\"form-group application-form-section-one-items\">\n      <label htmlor=\"currentlyEmployed\" className=\"lead\">\n        Are you currently employed?\n      </label>\n      <select\n        className=\"form-control\"\n        id=\"currentlyEmployed\"\n        name=\"currentlyEmployed\"\n        value={currentlyEmployed}\n        required\n        onChange={onChange}\n        disabled={!isEditMode}\n      >\n        <option value=\"\" disabled>\n          Select here\n        </option>\n        <option value=\"Full-time\">Full-time</option>\n        <option value=\"Part-time\">Part-time</option>\n        <option value=\"Unemployed\">Unemployed</option>\n      </select>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default ({ onChange, studying, isEditMode, editModeClass }) => {\n  return (\n    <div className=\"form-group application-form-section-one-items\">\n      <label htmlor=\"studying\" className=\"lead\">\n        Are you currently studying?\n      </label>\n      <select\n        className=\"form-control\"\n        id=\"studying\"\n        name=\"studying\"\n        value={studying}\n        required\n        onChange={onChange}\n        disabled={!isEditMode}\n      >\n        <option value=\"\" disabled>\n          Select here\n        </option>\n        <option value=\"Full-time\">Full-time</option>\n        <option value=\"Part-time\">Part-time</option>\n        <option value=\"Not Studying\">Not Studying</option>\n      </select>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default ({ onChange, experience, isEditMode, editModeClass }) => {\n  return (\n    <div className=\"form-group application-form-section-one-items\">\n      <label htmlor=\"experience\" className=\"lead\">\n        Programming Experience *\n      </label>\n      <select\n        className=\"form-control\"\n        id=\"experience\"\n        name=\"experience\"\n        value={experience}\n        required\n        onChange={onChange}\n        disabled={!isEditMode}\n      >\n        <option value=\"\" disabled>\n          Select here\n        </option>\n        <option>None</option>\n        <option>Basic</option>\n        <option>Intermediate</option>\n        <option>Advanced</option>\n      </select>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default ({ onChange, itAccess, isEditMode, editModeClass }) => {\n  return (\n    <div className=\"form-group application-form-section-one-items\">\n      <label htmlFor=\"itAccess\" className=\"lead\">\n        Do you have access to a computer and the internet? *\n      </label>\n      <select\n        className=\"form-control\"\n        id=\"itAccess\"\n        name=\"itAccess\"\n        value={itAccess}\n        required\n        onChange={onChange}\n        disabled={!isEditMode}\n      >\n        <option> Select here</option>\n        <option value>Yes</option>\n        <option value={false}>No</option>\n      </select>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default ({ onChange, hearAbout, isEditMode, editModeClass }) => {\n  return (\n    <div className=\"form-group application-form-section-one-items\">\n      <label htmlFor=\"hearAbout\" className=\"lead\">\n        How did you hear about us? *\n      </label>\n      <input\n        type=\"text\"\n        id=\"hearAbout\"\n        name=\"hearAbout\"\n        className=\"form-control\"\n        placeholder=\"E.g., from your friends or council or internet search\"\n        value={hearAbout}\n        required\n        onChange={onChange}\n        disabled={!isEditMode}\n      />\n    </div>\n  );\n};\n","import React from \"react\";\nimport FirstName from \"./firstName\";\nimport LastName from \"./lastName\";\nimport Gender from \"./gender\";\nimport DateOfBirth from \"./dateOfBirth\";\nimport PhoneNumber from \"./phoneNumber\";\nimport AvailableOnWhatsApp from \"./AvailableOnWhatsApp\";\nimport Country from \"./country\";\nimport City from \"./city\";\nimport CyfCity from \"./cyfCity\";\nimport IsAsylumSeekerOrRefugee from \"./IsAsylumSeekerOrRefugee\";\nimport DisadvantagedBackground from \"./disadvantagedBackground\";\nimport DisadvantagedBackgroundDescribe from \"./disadvantagedBackgroundDescribe\";\nimport CurrentlyEmployed from \"./currentlyEmployed\";\nimport Studying from \"./studying\";\nimport Experience from \"./experience\";\nimport ItAccess from \"./itAccess\";\nimport HearAbout from \"./hearAbout\";\nimport \"./index.css\";\n\nconst isEditMode = false;\nconst editModeClass = isEditMode ? \"edit-mode\" : \"not-edit-mode\";\n\nexport default ({\n  onChange,\n  firstName,\n  gender,\n  lastName,\n  city,\n  tel,\n  availableOnWhatsApp,\n  country,\n  dateOfBirthOnChange,\n  cities,\n  cityId,\n  isAsylumSeekerOrRefugee,\n  disadvantagedBackground,\n  disadvantagedBackgroundDescribe,\n  currentlyEmployed,\n  studying,\n  itAccess,\n  hearAbout,\n  experience,\n  telOnChange\n}) => {\n  return (\n    <form className=\"form-container\">\n      <h4 style={{ textAlign: \"center\" }}>Basic Applicant Details</h4>\n      <FirstName\n        onChange={onChange}\n        firstName={firstName}\n        isEditMode={isEditMode}\n        editModeClass={editModeClass}\n      />\n      <LastName\n        onChange={onChange}\n        lastName={lastName}\n        isEditMode={isEditMode}\n        editModeClass={editModeClass}\n      />\n      <Gender\n        onChange={onChange}\n        gender={gender}\n        isEditMode={isEditMode}\n        editModeClass={editModeClass}\n      />\n      <DateOfBirth\n        onChange={dateOfBirthOnChange}\n        isEditMode={isEditMode}\n        editModeClass={editModeClass}\n      />\n      <PhoneNumber\n        onChange={telOnChange}\n        tel={tel}\n        isEditMode={isEditMode}\n        editModeClass={editModeClass}\n      />\n      <AvailableOnWhatsApp\n        onChange={onChange}\n        availableOnWhatsApp={availableOnWhatsApp}\n        isEditMode={isEditMode}\n        editModeClass={editModeClass}\n      />\n      <Country\n        onChange={onChange}\n        country={country}\n        isEditMode={isEditMode}\n        editModeClass={editModeClass}\n      />\n      <City\n        onChange={onChange}\n        city={city}\n        isEditMode={isEditMode}\n        editModeClass={editModeClass}\n      />\n      <CyfCity\n        onChange={onChange}\n        cityId={cityId}\n        cities={cities}\n        isEditMode={isEditMode}\n        editModeClass={editModeClass}\n      />\n      <IsAsylumSeekerOrRefugee\n        onChange={onChange}\n        isAsylumSeekerOrRefugee={isAsylumSeekerOrRefugee}\n        isEditMode={isEditMode}\n        editModeClass={editModeClass}\n      />\n      {isAsylumSeekerOrRefugee === false && (\n        <DisadvantagedBackground\n          onChange={onChange}\n          disadvantagedBackground={disadvantagedBackground}\n          isEditMode={isEditMode}\n          editModeClass={editModeClass}\n        />\n      )}\n      {disadvantagedBackground && !isAsylumSeekerOrRefugee && (\n        <DisadvantagedBackgroundDescribe\n          onChange={onChange}\n          disadvantagedBackgroundDescribe={disadvantagedBackgroundDescribe}\n          isEditMode={isEditMode}\n          editModeClass={editModeClass}\n        />\n      )}\n      <CurrentlyEmployed\n        onChange={onChange}\n        currentlyEmployed={currentlyEmployed}\n        isEditMode={isEditMode}\n        editModeClass={editModeClass}\n      />\n      <Studying\n        onChange={onChange}\n        studying={studying}\n        isEditMode={isEditMode}\n        editModeClass={editModeClass}\n      />\n      <ItAccess\n        onChange={onChange}\n        itAccess={itAccess}\n        isEditMode={isEditMode}\n        editModeClass={editModeClass}\n      />\n      <Experience\n        onChange={onChange}\n        experience={experience}\n        isEditMode={isEditMode}\n        editModeClass={editModeClass}\n      />\n      <HearAbout\n        onChange={onChange}\n        hearAbout={hearAbout}\n        isEditMode={isEditMode}\n        editModeClass={editModeClass}\n      />\n    </form>\n  );\n};\n","import React from \"react\";\nimport { AppBar, Tabs, Tab } from \"@material-ui/core\";\nimport { blue, cyan, red } from \"@material-ui/core/colors\";\n\nconst TabContent = args => {\n  const { step } = args;\n\n  return <p>{step.description}</p>;\n};\n\nconst ApplicationProcess = ({ steps }) => {\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const tabs = steps.map(step => (\n    <Tab key={step.number} label={step.header} wrapped></Tab>\n  ));\n\n  const tabContents = steps.map((step, index) => {\n    return (\n      value === index && (\n        <TabContent key={step.number} value={value} index={index} step={step} />\n      )\n    );\n  });\n\n  return (\n    <div className=\"tab-container\">\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          color=\"secondary\"\n          indicatorColor=\"secondary\"\n          textColor=\"secondary\"\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n        >\n          {tabs}\n        </Tabs>\n      </AppBar>\n      {tabContents}\n    </div>\n  );\n};\n\nexport default ApplicationProcess;\n","import React from \"react\";\nimport ProgressBar from \"./ProgressBar\";\nimport BasicApplicantDetails from \"./BasicApplicantDetails\";\nimport ApplicationProcess from \"./ApplicationProcess\";\nimport steps from \"../../services/mocks/steps.json\";\nimport \"./style.css\";\n\nexport default class IndividualWorkContainer extends React.Component {\n  render() {\n    // const steps = [\n    //   \"step1\",\n    //   \"step2\",\n    //   \"step3\",\n    //   \"step4\",\n    //   \"step5\",\n    //   \"step6\",\n    //   \"step7\",\n    //   \"step8\"\n    // ];\n    const currentStep = 4;\n\n    return (\n      <div>\n        <ProgressBar steps={steps} currentStep={currentStep} />\n        <BasicApplicantDetails />\n        <ApplicationProcess steps={steps} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ApplicantDetailPageTitle from \"../components/ApplicantDetailPageTitle\";\nimport IndividualWorkContainer from \"../components/IndividualWorkContainer\";\nclass ApplicantDetailPageContainer extends React.Component {\n  render() {\n    const { params } = this.props.match;\n\n    return (\n      <div>\n        <ApplicantDetailPageTitle params={params} />\n        <IndividualWorkContainer />\n      </div>\n    );\n  }\n}\n\nexport default ApplicantDetailPageContainer;\n","import React from \"react\";\n\nconst ListView = () => {\n  return <h1 style={{ textAlign: \"center\" }}>I'm the list view!</h1>;\n};\n\nexport default ListView;\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Welcome from \"./components/Welcome\";\nimport Error404 from \"./components/Error404\";\nimport KanbanBoard from \"./containers/KanbanBoard\";\nimport NavBar from \"./components/Navbar\";\nimport ApplicantDetailPageContainer from \"./containers/ApplicantDetailPageContainer.js\";\nimport ListView from \"./containers/ListView\";\n\nfunction App() {\n  return (\n    <div>\n      <BrowserRouter>\n        <NavBar />\n        <Switch>\n          <Route path=\"/\" component={Welcome} exact />\n          <Route path=\"/kanban\" component={KanbanBoard} />\n          <Route path=\"/list\" component={ListView} />\n          <Route\n            path=\"/applicant/:id\"\n            component={ApplicantDetailPageContainer}\n          />\n          <Route path=\"*\" component={Error404} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}